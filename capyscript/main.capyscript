import "http";
import "io";
import "json";
import "date";
import "html";
import "manga_models";

function passProtector(data) {

    result = httpGet({
        url: "https://hentailib.me/manga-list",
        params: {},
        paths: {},
        headers: {},
        throughWeb: true
    });

    resultData = result["data"];

    headers = result["headers"];

    headers["x-xsrf-token"] = resultData["cookies-raw"]["XSRF-TOKEN"].replaceAll("%3D", "=");
    headers["x-requested-with"] = "XMLHttpRequest";
    headers["Content-Type"] = "application/json;charset=UTF-8";

    document = createWakaHtmlParser(result["body"]);

    metas = document.getElementsByTagName("meta");


    for(i = 0; i < metas.length; i = i + 1) {
       e = metas[i];
       if(e.attributes["name"] == "_token") {
          headers["x-csrf-token"] = e.attributes["content"];
       }
    }

    print("x-csrf-token");
    print(headers["x-csrf-token"]);
    print("x-xsrf-token");
    print(headers["x-xsrf-token"]);
    print("user-agent");
    print(headers["user-agent"]);
    print("cookie");
    print(headers["cookie"]);


    useHeaders({headers: headers});
}

function main() {

    passProtector({});

}

function tests() {

}
    response = public_post({
                      "url": "http://httpbin.org/post",
                      "body": jsonSerialize({}),
                      "headers": {
                          "Content-Type": "application/json"
                      }
                  });

    parser = createDateFormatter("yyyy-MM-dd hh:mm");
    print(parser.format(parseDate("2018-01-01 12:00")));

    htmlParser = createHTMLParser("<html><body><h1>hello</h1></body></html>");
    print(htmlParser.getElementsByTagName("h1")[0].outerHtml);

    return jsonDeserialize(response.body);

}

function map_tests() {
    map = {
        "map": {
            "value": 2
        },
        "value": 1
    };

    print(map["map"]["value"]);

    arr = [[0, 1], [2, 3]];

    print(arr[1][0]);
    arr[0][0] = 5;
    print(arr[0][0]);




}

function public_post(url, body, headers) {
   return httpPost(url, body, headers);
}

